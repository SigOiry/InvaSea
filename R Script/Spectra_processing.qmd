---
title: "Spectra_Processing"
author: "Simon Oiry"
format: html
editor: source
editor_options: 
  chunk_output_type: console
---

```{r Library}
library(tidyverse)
library(hsdar)
library(Utilities.Package)
library(terra)
library(tidyterra)
```

```{r data opening}

df <-  read_table("Data/CSV/all_spectra.csv")

df_long <- df %>% 
  pivot_longer(-Wavelength, names_to = "Name",values_to = "ref") %>% 
  mutate(Name = gsub(".asd","",Name),
         Spectra = as.numeric(gsub("\\D", "", Name)),
         dataset_Name = gsub("[[:digit:]]","",Name))
        

```

```{r plot_sum}
df_sum %>% 
ggplot() + 
  geom_line(aes(x = Wavelength, y = mean, color = dataset_Name))+
  geom_ribbon(aes(x = Wavelength, ymin = mean-sd, ymax = mean + sd, color = dataset_Name, fill = dataset_Name), alpha = 0.3)+
  facet_wrap(~dataset_Name)

```

```{r Test auto process}

df_VIE<- df_long %>% 
  dplyr::filter(dataset_Name == "GRA-VIE")

df_VIE %>% 
  dplyr::filter(Wavelength >= 400,
                Wavelength <= 950) %>% 
ggplot()+
  geom_line(aes(x = Wavelength, y = ref, group = Name))


df_VIE_wide <- df_VIE %>% 
  dplyr::filter(Wavelength >= 400,
                Wavelength <= 950) %>% 
  dplyr::select(-c(sample,dataset_Name)) %>% 
  pivot_wider(names_from = "Name", values_from = "ref")
  

wv <- as.numeric(df_VIE_wide$Wavelength)

speclib_vie <- df_VIE_wide %>% 
  dplyr::select(-Wavelength) %>% 
  as.matrix()

spectra_dist <- data.frame(spectra = names(df_VIE_wide)[-1],
                           distance = NA)

for(i in 2:ncol(speclib_vie)){
  
  ref <- speclib(speclib_vie[,i-1], wv)
  sp <- speclib(speclib_vie[,i], wv)
  
  spectra_dist$distance[i] <- as.numeric(sam(ref,sp))
}

spectra_dist$ID <- as.character(c(1:nrow(spectra_dist)))


spectra_dist %>% 
  slice(1:200) %>% 
ggplot()+
  geom_bar(aes(x = ID, y = distance),stat="identity")


df_VIE %>% 
  dplyr::filter(Name == "GRA-VIE-00009" | Name == "GRA-VIE-00010") %>% 
ggplot()+
  geom_line(aes(x = Wavelength, y = ref, color = Name))


spectlib_all <- speclib(speclib_vie, wv)

sam <- dist.speclib(spectlib_all, method = "sam")

nMDS <- MASS::isoMDS(sam,maxit = 1000,trace=FALSE) 

mds_df <- nMDS$points %>% 
  as_tibble()  %>%
  dplyr::rename(x=V1,y=V2) %>% 
  mutate(Spectra = names(df_VIE_wide)[-1],
         ID = c(1:nrow(.)))

p = hclust(sam, method = "complete")

mds_df<-mds_df %>% 
  mutate(clust = cutree(p, k = length(names(df_VIE_wide)[-1])/10)) %>% 
  rename(x_nMDS = "x",
         y_nMDS = "y")


df_VIE_final <-  df_VIE %>% 
  dplyr::filter(Wavelength >= 400,
                Wavelength <= 950) %>% 
  left_join(mds_df, by = c("Name" = "Spectra"))

ggplot(df_VIE_final)+
  geom_point(aes(x = x_nMDS, y = y_nMDS, color =clust))+
  theme(legend.position = "None")


df_VIE_final %>% 
  dplyr::filter(clust == 2) %>% 
  ggplot()+
  geom_line(aes(x = Wavelength, y = ref, color = Name))

```

```{r BER}

df_Ber_long <- df %>% 
  pivot_longer(-Wavelength, names_to = "Name",values_to = "ref") %>% 
  mutate(Name = gsub(".asd","",Name),
         Spectra = as.numeric(gsub("\\D", "", Name)),
         dataset_Name = gsub("[[:digit:]]","",Name) %>% 
           gsub("-","",.)) %>% 
  dplyr::filter(str_detect(dataset_Name, "BER"),
                Wavelength >= 400,
                Wavelength <= 950) 


Notebook_BER <- read.delim("Data/Notebook/Sampling_Notebook_BER.txt")


for(i in 1:nrow(Notebook_BER)){
  
  a <- df_Ber_long %>% 
    dplyr::filter(Spectra %in% c(Notebook_BER$Start[i]:Notebook_BER$End[i])) %>% 
    mutate(Sample = Notebook_BER$Sample[i],
           Letter = Notebook_BER$Letter[i],
           Obs = Notebook_BER$Obs[i])
  
  if(i == 1){
    output_BER <- a
  }  else{
    output_BER <- output_BER %>% 
      rbind(a)
  }
  
}

write.csv(output_BER, "Data/CSV/RAW_BER_Spectra.csv")

for(i in 1:length(unique(output_BER$Sample))){
  
  sp <- output_BER %>% 
   dplyr::filter(Sample == unique(output_BER$Sample)[i]) %>% 
    mutate(Letter = case_when(Letter == "A" ~ "Sparse on table",
                              Letter == "B" ~ "Bare Sediment",
                              Letter == "C" ~ "Sparse on Sediment",
                              Letter == "D" ~ "High density"))
  
  plot <- ggplot(sp)+
    geom_line(aes(x = Wavelength, y = ref, color = Letter, group = Name))+
    geom_text(aes(x = 400, y = max(ref)-(max(ref)-min(ref))*0.1, label = paste0("Sample: ", unique(Sample))),
              size = 5, hjust = 0)+
    geom_text(aes(x = 400, y = max(ref)-(max(ref)-min(ref))*0.13, label = paste0("Specie: ", unique(Obs))),
              size = 5, hjust = 0)+
    scale_color_manual(values = c("brown", "red","orange", "grey60"))+
    xlab("Wv (nm)")+
    ylab("Reflectance")+
    theme_Bede()+
    theme(axis.text.x = element_text(size = 15),
          axis.text.y = element_text(size = 15),
          legend.position = "top", 
          legend.key.width = unit(1,"cm"),
          legend.key.height = unit(3,"mm"))
  
  ggsave(paste0("Plot/BER/RAW/Sample",unique(sp$Sample),".jpg" ), plot, width = 10, height = 10, dpi = 200)

}


####  STD 

df_BER_STD <- output_BER %>% 
  dplyr::filter(Wavelength >= 400,
                Wavelength <= 950) %>% 
  group_by(Name) %>% 
  reframe(STD = (ref - min(ref))/(max(ref)-min(ref)),
          Wavelength = Wavelength,
          ref = ref,
          Spectra = Spectra,
          dataset_Name = dataset_Name,
          Sample = Sample,
          Letter = Letter,
          Obs = Obs)


for(i in 1:length(unique(df_BER_STD$Sample))){
  
  sp_STD <- df_BER_STD %>% 
   dplyr::filter(Sample == unique(output_BER$Sample)[i]) %>% 
    mutate(Letter = case_when(Letter == "A" ~ "Sparse on table",
                              Letter == "B" ~ "Bare Sediment",
                              Letter == "C" ~ "Sparse on Sediment",
                              Letter == "D" ~ "High density"))
  
  plot <- ggplot(sp_STD)+
    geom_line(aes(x = Wavelength, y = STD, color = Letter, group = Name))+
    geom_text(aes(x = 400, y = max(ref)-(max(ref)-min(ref))*0.1, label = paste0("Sample: ", unique(Sample))),
              size = 5, hjust = 0)+
    geom_text(aes(x = 400, y = max(ref)-(max(ref)-min(ref))*0.13, label = paste0("Specie: ", unique(Obs))),
              size = 5, hjust = 0)+
    scale_color_manual(values = c("brown", "red","orange", "grey60"))+
    xlab("Wv (nm)")+
    ylab("STD Reflectance")+
    theme_Bede()+
    theme(axis.text.x = element_text(size = 15),
          axis.text.y = element_text(size = 15),
          legend.position = "top", 
          legend.key.width = unit(1,"cm"),
          legend.key.height = unit(3,"mm"))
  
  ggsave(paste0("Plot/BER/STD/Sample",unique(sp_STD$Sample),"_STD.jpg" ), plot, width = 10, height = 10, dpi = 200)

}


```

```{r VIE}
df_VIE_long<- df_long %>% 
  dplyr::filter(dataset_Name == "GRA-VIE",
                Wavelength >= 400,
                Wavelength <= 950)

Notebook_VIE <- read.delim("Data/Notebook/Sampling_Notebook_VIE.txt")

for(i in 1:nrow(Notebook_VIE)){
  
  a <- df_VIE_long %>% 
    dplyr::filter(Spectra %in% c(Notebook_VIE$Start[i]:Notebook_VIE$End[i])) %>% 
    mutate(Sample = Notebook_VIE$Sample[i],
           Letter = Notebook_VIE$Letter[i],
           Obs = Notebook_VIE$Obs[i])
  
  if(i == 1){
    output_VIE <- a
  }  else{
    output_VIE <- output_VIE %>% 
      rbind(a)
  }
  
}


write.csv(output_VIE, "Data/CSV/RAW_VIE_Spectra.csv")

for(i in 1:length(unique(output_VIE$Sample))){
  
  sp <- output_VIE %>% 
   dplyr::filter(Sample == unique(output_VIE$Sample)[i]) 
    # mutate(Letter = case_when(Letter == "A" ~ "High density",
    #                           # Letter == "B" ~ "Bare Sediment",
    #                           Letter == "B" ~ "Sparse on table",
    #                           Letter == "C" ~ "Sparse on Sediment",
    #                           Letter == "D" ~ "NA",
    #                           Letter == "E" ~ "Sediment"))
  
  
  
  
  plot <- ggplot(sp)+
    geom_line(aes(x = Wavelength, y = ref, color = as.factor(Letter), group = Name))+
    geom_text(aes(x = 850, y = 0.68, label = paste0("Sample: ", unique(Sample))),
              size = 5, hjust = 0)+
    geom_text(aes(x = 850, y = 0.65, label = paste0("Specie: ", unique(Obs))),
              size = 5, hjust = 0)+
    scale_color_manual(values = c( "red","orange","orange3","yellow3","yellow4","brown", "grey30","grey40","grey50" ),
                       breaks = c("A","B","C","D","E","F","G","H","I"), 
                       labels = c("High density","Sparse on table1","Sparse on table2","Sparse on Sediment1","Sparse on Sediment2","Sediment", "Fucus1", "Fucus2", "Fucus3"))+
    xlab("Wv (nm)")+
    ylab("Reflectance")+
    ylim(c(0,0.7))+
    theme_Bede()+
    labs(color = " ")+
    theme(axis.text.x = element_text(size = 15),
          axis.text.y = element_text(size = 15),
          legend.position = "top", 
          legend.key.width = unit(1,"cm"),
          legend.key.height = unit(3,"mm"))
  
  if(file.exists(paste0("Data/Pictures/VIE/Lab/VIE",unique(sp$Sample),".jpg"))){
    img<-rast(paste0("Data/Pictures/VIE/Lab/VIE",unique(sp$Sample),".jpg"))
    
    
    img_plot<-ggplot()+
      geom_spatraster_rgb(data = img)+
      coord_equal()+
      scale_x_continuous(expand = c(0,0))+
      scale_y_continuous(expand = c(0,0))+
      theme_void()
    
    plot <- plot +
      annotation_custom(ggplotGrob(img_plot), xmin = 400, xmax = 670, ymin = 0.4, ymax = 0.72)
    
  }else{
    if(unique(sp$Obs == "Fucus sp.")){
     img<-rast("Data/Pictures/VIE/Lab/fucus.jpg")
    
    
    img_plot<-ggplot()+
      geom_spatraster_rgb(data = img)+
      coord_equal()+
      scale_x_continuous(expand = c(0,0))+
      scale_y_continuous(expand = c(0,0))+
      theme_void()
    
    plot <- plot +
      annotation_custom(ggplotGrob(img_plot), xmin = 400, xmax = 670, ymin = 0.4, ymax = 0.72) 
    }
      
    
    }
  
  ggsave(paste0("Plot/VIE/RAW/Sample",unique(sp$Sample),".jpg" ), plot, width = 10, height = 10, dpi = 200)

}



####  STD 

df_VIE_STD <- output_VIE %>% 
  dplyr::filter(Wavelength >= 400,
                Wavelength <= 950) %>% 
  group_by(Name) %>% 
  reframe(STD = (ref - min(ref))/(max(ref)-min(ref)),
          Wavelength = Wavelength,
          ref = ref,
          Spectra = Spectra,
          dataset_Name = dataset_Name,
          Sample = Sample,
          Letter = Letter,
          Obs = Obs)


for(i in 1:length(unique(df_VIE_STD$Sample))){
  
  sp_STD <- df_VIE_STD %>% 
   dplyr::filter(Sample == unique(output_VIE$Sample)[i])
  
  plot <- ggplot(sp_STD)+
    geom_line(aes(x = Wavelength, y = STD, color = Letter, group = Name))+
    geom_text(aes(x = 400, y = max(ref)-(max(ref)-min(ref))*0.1, label = paste0("Sample: ", unique(Sample))),
              size = 5, hjust = 0)+
    geom_text(aes(x = 400, y = max(ref)-(max(ref)-min(ref))*0.13, label = paste0("Specie: ", unique(Obs))),
              size = 5, hjust = 0)+
    scale_color_manual(values = c( "red","orange","orange3","yellow3","yellow4","brown", "grey30","grey40","grey50" ),
                       breaks = c("A","B","C","D","E","F","G","H","I"), 
                       labels = c("High density","Sparse on table1","Sparse on table2","Sparse on Sediment1","Sparse on Sediment2","Sediment", "Fucus1", "Fucus2", "Fucus3"))+
    xlab("Wv (nm)")+
    ylab("STD Reflectance")+
    theme_Bede()+
    theme(axis.text.x = element_text(size = 15),
          axis.text.y = element_text(size = 15),
          legend.position = "top", 
          legend.key.width = unit(1,"cm"),
          legend.key.height = unit(3,"mm"))
  
  ggsave(paste0("Plot/VIE/STD/Sample",unique(sp_STD$Sample),"_STD.jpg" ), plot, width = 10, height = 10, dpi = 200)

}


```

```{r VANNE}
df_VAN_long<- df_long %>% 
  dplyr::filter(dataset_Name == "GRA-VAN",
                Wavelength >= 400,
                Wavelength <= 950)


Notebook_VAN <- read.delim("Data/Notebook/Sampling_Notebook_VAN.txt")

for(i in 1:nrow(Notebook_VAN)){
  
  a <- df_VAN_long %>% 
    dplyr::filter(Spectra %in% c(Notebook_VAN$Start[i]:Notebook_VAN$End[i])) %>% 
    mutate(Sample = Notebook_VAN$Sample[i],
           Letter = Notebook_VAN$Letter[i],
           Obs = as.character(Notebook_VAN$Obs[i]))
  
  if(i == 1){
    output_VAN <- a
  }  else{
    output_VAN <- output_VAN %>% 
      rbind(a)
  }
  
}

output_VAN <- output_VAN %>% 
  dplyr::filter(Name != "GRA-VAN00810")

write.csv(output_VAN, "Data/CSV/RAW_VAN_Spectra.csv")

for(i in 1:length(unique(output_VAN$Sample))){
  
  sp <- output_VAN %>% 
   dplyr::filter(Sample == unique(output_VAN$Sample)[i]) 
    # mutate(Letter = case_when(Letter == "A" ~ "High density",
    #                           # Letter == "B" ~ "Bare Sediment",
    #                           Letter == "B" ~ "Sparse on table",
    #                           Letter == "C" ~ "Sparse on Sediment",
    #                           Letter == "D" ~ "NA",
    #                           Letter == "E" ~ "Sediment"))
  
  
  unique(sp$Name)
  
  plot <- ggplot(sp)+
    geom_line(aes(x = Wavelength, y = ref, color = as.factor(Letter), group = Name))+
    geom_text(aes(x = 850, y = 0.68, label = paste0("Sample: ", unique(Sample))),
              size = 5, hjust = 0)+
    geom_text(aes(x = 850, y = 0.65, label = paste0("Specie: ", unique(Obs))),
              size = 5, hjust = 0)+
    scale_color_manual(values = c("grey30","orange","red", "green4", "red1", "red4"),
                       breaks = c("A","B","C","D","E","F"), 
                       labels = c("Sparse on Table","Sparse on Sediment","High density", "Green algae", "Red Algae1", "Red Algae2"))+
    xlab("Wv (nm)")+
    ylab("Reflectance")+
    ylim(c(0,0.7))+
    theme_Bede()+
    labs(color = " ")+
    theme(axis.text.x = element_text(size = 15),
          axis.text.y = element_text(size = 15),
          legend.position = "top", 
          legend.key.width = unit(1,"cm"),
          legend.key.height = unit(3,"mm"))
  
  if(file.exists(paste0("Data/Pictures/VAN/Lab/VAN",unique(sp$Sample),".jpg"))){
    img<-rast(paste0("Data/Pictures/VAN/Lab/VAN",unique(sp$Sample),".jpg"))
    
    
    img_plot<-ggplot()+
      geom_spatraster_rgb(data = img)+
      coord_equal()+
      scale_x_continuous(expand = c(0,0))+
      scale_y_continuous(expand = c(0,0))+
      theme_void()
    
    plot <- plot +
      annotation_custom(ggplotGrob(img_plot), xmin = 400, xmax = 670, ymin = 0.4, ymax = 0.72)
    
  }else{
    if(unique(sp$Obs == "Green and Red Algae")){
     img<-rast("Data/Pictures/VAN/Lab/Green_and_Red.jpg")
    
    
    img_plot<-ggplot()+
      geom_spatraster_rgb(data = img)+
      coord_equal()+
      scale_x_continuous(expand = c(0,0))+
      scale_y_continuous(expand = c(0,0))+
      theme_void()
    
    plot <- plot +
      annotation_custom(ggplotGrob(img_plot), xmin = 400, xmax = 670, ymin = 0.4, ymax = 0.72) 
    }
      
    
    }
  
  ggsave(paste0("Plot/VAN/RAW/Sample",unique(sp$Sample),".jpg" ), plot, width = 10, height = 10, dpi = 200)

}




####  STD 

df_VAN_STD <- output_VAN %>% 
  dplyr::filter(Wavelength >= 400,
                Wavelength <= 950) %>% 
  group_by(Name) %>% 
  reframe(STD = (ref - min(ref))/(max(ref)-min(ref)),
          Wavelength = Wavelength,
          ref = ref,
          Spectra = Spectra,
          dataset_Name = dataset_Name,
          Sample = Sample,
          Letter = Letter,
          Obs = Obs)


for(i in 1:length(unique(df_VAN_STD$Sample))){
  
  sp_STD <- df_VAN_STD %>% 
   dplyr::filter(Sample == unique(output_VAN$Sample)[i])
  
  plot <- ggplot(sp_STD)+
    geom_line(aes(x = Wavelength, y = STD, color = Letter, group = Name))+
    geom_text(aes(x = 400, y = max(ref)-(max(ref)-min(ref))*0.1, label = paste0("Sample: ", unique(Sample))),
              size = 5, hjust = 0)+
    geom_text(aes(x = 400, y = max(ref)-(max(ref)-min(ref))*0.13, label = paste0("Specie: ", unique(Obs))),
              size = 5, hjust = 0)+
    scale_color_manual(values = c("grey30","orange","red", "green4", "red1", "red4"),
                       breaks = c("A","B","C","D","E","F"), 
                       labels = c("Sparse on Table","Sparse on Sediment","High density", "Green algae", "Red Algae1", "Red Algae2"))+
    xlab("Wv (nm)")+
    ylab("STD Reflectance")+
    theme_Bede()+
    theme(axis.text.x = element_text(size = 15),
          axis.text.y = element_text(size = 15),
          legend.position = "top", 
          legend.key.width = unit(1,"cm"),
          legend.key.height = unit(3,"mm"))
  
  ggsave(paste0("Plot/VAN/STD/Sample",unique(sp_STD$Sample),"_STD.jpg" ), plot, width = 10, height = 10, dpi = 200)

}



```

```{r OSM}


df_OSM <- df_long %>% 
  dplyr::filter(dataset_Name == "OSM-GIL")

df_OSM <- df_OSM %>%   
  dplyr::filter(Wavelength>=400, Wavelength<=950) %>% 
  group_by(Wavelength) %>% 
  reframe(ref=mean(ref)) %>% 
  ungroup() %>% 
  mutate(Name = "OSM")
```

```{r CHON}


df_CHO <- df_long %>% 
  dplyr::filter(dataset_Name == "CHO-GIL")

ggplot(df_CHO)+
  geom_line(aes(x = Wavelength, y =ref, group = Name))

df_CHO <- df_CHO %>%   
  dplyr::filter(Wavelength>=400, Wavelength<=950) %>% 
  group_by(Wavelength) %>% 
  reframe(ref=mean(ref)) %>% 
  ungroup() %>% 
  rename(CHO = ref)
```

